---
# bits and pieces of longcode strings
first_tick: 'first tick'
close_on: 'close on [_1]'
contract_start_time: 'contract start time'
entry_spot: 'entry spot'
entry_spot_minus: 'entry spot minus [_1]'
entry_spot_minus_plural: 'entry spot minus [plural,_1,%d pip, %d pips]'
entry_spot_plus: 'entry spot plus [_1]'
entry_spot_plus_plural: 'entry spot plus [plural,_1,%d pip, %d pips]'
# longcodes
asiand_tick: 'Win payout if the last tick of [_1] is strictly lower than the average of the [plural,_3,%d tick,%d ticks].'
asianu_tick: 'Win payout if the last tick of [_1] is strictly higher than the average of the [plural,_3,%d tick,%d ticks].'
call_daily: 'Win payout if [_1] is strictly higher than [_4] at [_3].'
call_intraday: 'Win payout if [_1] is strictly higher than [_4] at [_3] after [_2].'
call_intraday_fixed_expiry: 'Win payout if [_1] is strictly higher than [_4] at [_3].'
call_tick: 'Win payout if [_1] after [plural,_3,%d tick,%d ticks] is strictly higher than [_4].'
calle_daily: 'Win payout if [_1] is higher than or equal to [_4] at [_3].'
calle_intraday: 'Win payout if [_1] is higher than or equal to [_4] at [_3] after [_2].'
calle_intraday_fixed_expiry: 'Win payout if [_1] is higher than or equal to [_4] at [_3].'
calle_tick: 'Win payout if [_1] after [plural,_3,%d tick,%d ticks] is higher than or equal to [_4].'
digitdiff_tick: 'Win payout if the last digit of [_1] is not [_4] after [plural,_3,%d tick,%d ticks].'
digiteven_tick: 'Win payout if the last digit of [_1] is even after [_3] ticks.'
digitmatch_tick: 'Win payout if the last digit of [_1] is [_4] after [plural,_3,%d tick,%d ticks].'
digitodd_tick: 'Win payout if the last digit of [_1] is odd after [_3] ticks.'
digitover_tick: 'Win payout if the last digit of [_1] is strictly higher than [_4] after [_3] ticks.'
digitunder_tick: 'Win payout if the last digit of [_1] is strictly lower than [_4] after [_3] ticks.'
tickhigh_tick: 'Win payout if tick [_5] of [_1] is the highest among all [_3] ticks.'
ticklow_tick: 'Win payout if tick [_5] of [_1] is the lowest among all [_3] ticks.'
expirymiss_daily: 'Win payout if [_1] ends outside [_5] to [_4] at [_3].'
expirymiss_intraday: 'Win payout if [_1] ends outside [_5] to [_4] at [_3] after [_2].'
expirymiss_intraday_fixed_expiry: 'Win payout if [_1] ends outside [_5] to [_4] at [_3].'
expirymisse_daily: 'Win payout if [_1] ends on or outside [_5] to [_4] at [_3].'
expirymisse_intraday: 'Win payout if [_1] ends on or outside [_5] to [_4] at [_3] after [_2].'
expirymisse_intraday_fixed_expiry: 'Win payout if [_1] ends on or outside [_5] to [_4] at [_3].'
expiryrange_daily: 'Win payout if [_1] ends strictly between [_5] to [_4] at [_3].'
expiryrange_intraday: 'Win payout if [_1] ends strictly between [_5] to [_4] at [_3] after [_2].'
expiryrange_intraday_fixed_expiry: 'Win payout if [_1] ends strictly between [_5] to [_4] at [_3].'
expiryrangee_daily: 'Win payout if [_1] ends on or between [_5] to [_4] at [_3].'
expiryrangee_intraday: 'Win payout if [_1] ends on or between [_5] to [_4] at [_3] after [_2].'
expiryrangee_intraday_fixed_expiry: 'Win payout if [_1] ends on or between [_5] to [_4] at [_3].'
legacy_contract: 'Legacy contract. No further information is available.'
notouch_daily: 'Win payout if [_1] does not touch [_4] through [_3].'
notouch_intraday: 'Win payout if [_1] does not touch [_4] through [_3] after [_2].'
notouch_intraday_fixed_expiry: 'Win payout if [_1] does not touch [_4] through [_3].'
notouch_tick: 'Win payout if [_1] does not touch [_4] through [plural,_3,%d tick,%d ticks] after [_2].'
onetouch_daily: 'Win payout if [_1] touches [_4] through [_3].'
onetouch_intraday: 'Win payout if [_1] touches [_4] through [_3] after [_2].'
onetouch_intraday_fixed_expiry: 'Win payout if [_1] touches [_4] through [_3].'
onetouch_tick: 'Win payout if [_1] touches [_4] through [plural,_3,%d tick,%d ticks] after [_2].'
put_daily: 'Win payout if [_1] is strictly lower than [_4] at [_3].'
put_intraday: 'Win payout if [_1] is strictly lower than [_4] at [_3] after [_2].'
put_intraday_fixed_expiry: 'Win payout if [_1] is strictly lower than [_4] at [_3].'
put_tick: 'Win payout if [_1] after [plural,_3,%d tick,%d ticks] is strictly lower than [_4].'
pute_daily: 'Win payout if [_1] is lower than or equal to [_4] at [_3].'
pute_intraday: 'Win payout if [_1] is lower than or equal to [_4] at [_3] after [_2].'
pute_intraday_fixed_expiry: 'Win payout if [_1] is lower than or equal to [_4] at [_3].'
pute_tick: 'Win payout if [_1] after [plural,_3,%d tick,%d ticks] is lower than or equal to [_4].'
range_daily: 'Win payout if [_1] stays between [_5] to [_4] through [_3].'
range_intraday: 'Win payout if [_1] stays between [_5] and [_4] through [_3] after [_2].'
range_intraday_fixed_expiry: 'Win payout if [_1] stays between [_5] to [_4] through [_3].'
upordown_daily: 'Win payout if [_1] goes outside [_5] to [_4] through [_3].'
upordown_intraday: 'Win payout if [_1] goes outside [_5] and [_4] through [_3] after [_2].'
upordown_intraday_fixed_expiry: 'Win payout if [_1] goes outside [_5] to [_4] through [_3].'
resetcall_intraday: 'Win payout if [_1] after [_3] is strictly higher than it was at either entry or [_5].'
resetcall_tick: 'Win payout if [_1] after [plural,_3,%d tick,%d ticks] is strictly higher than it was at either entry or [_5] ticks.'
resetput_intraday: 'Win payout if [_1] after [_3] is strictly lower than it was at either entry or [_5].'
resetput_tick: 'Win payout if [_1] after [plural,_3,%d tick,%d ticks] is strictly lower than it was at either entry or [_5] ticks.'
lbfloatcall_intraday: "Win [_6] [_5] times [_1]'s close minus low over the next [_3]."
lbfloatcall_intraday_fixed_expiry: "Win [_6] [_5] times [_1]'s close minus low at [_3]."
lbfloatput_intraday: "Win [_6] [_5] times [_1]'s high minus close over the next [_3]."
lbfloatput_intraday_fixed_expiry: "Win [_6] [_5] times [_1]'s high minus close at [_3]."
lbhighlow_intraday: "Win [_6] [_5] times [_1]'s high minus low over the next [_3]."
lbhighlow_intraday_fixed_expiry: "Win [_6] [_5] times [_1]'s high minus low at [_3]."
callspread_intraday: "Win up to [_7] [_6] if [_1]'s exit tick is between [_5] and [_4] at [_3] after [_2]."
callspread_intraday_fixed_expiry: "Win up to [_7] [_6] if [_1]'s exit tick is between [_5] and [_4] at [_3]."
callspread_daily: "Win up to [_7] [_6] if [_1]'s exit tick is between [_5] and [_4] at [_3]."
callspread_tick: "Win up to [_7] [_6] if [_1]'s exit tick is between [_5] and [_4] after [plural,_3,%d tick,%d ticks]."
putspread_intraday: "Win up to [_7] [_6] if [_1]'s exit tick is between [_4] and [_5] at [_3] after [_2]."
putspread_intraday_fixed_expiry: "Win up to [_7] [_6] if [_1]'s exit tick is between [_4] and [_5] at [_3]."
putspread_daily: "Win up to [_7] [_6] if [_1]'s exit tick is between [_4] and [_5] at [_3]."
putspread_tick: "Win up to [_7] [_6] if [_1]'s exit tick is between [_4] and [_5] after [plural,_3,%d tick,%d ticks]."
runhigh_tick: "Win payout if [_1] rises successively for [plural,_3,%d tick, %d ticks] after the entry spot."
runlow_tick: "Win payout if [_1] falls successively for [plural,_3,%d tick, %d ticks] after the entry spot."
multup_daily: "Win [_5]% of your stake for every 1% rise in [_1]."
multdown_daily: "Win [_5]% of your stake for every 1% fall in [_1]."

